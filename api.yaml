swagger: '2.0'
info:
  description: ''
  version: 1.0.0
  title: DealPeer
  termsOfService: ''
  contact:
    email: info@dealpeer.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: api.dealpeer.com
basePath: /v1
tags:
  - name: users
    description: Operations about user
schemes:
  - https
paths:
  '/oauth/{tenant}':
    post:
      summary: Signin/signup
      description: Signin/signup
      tags:
        - auth
      produces:
        - application/json
      parameters:
        - in: path
          name: tenant
          type: string
          required: true
          enum:
            - google
            - facebook
        - in: body
          name: body
          schema:
            type: object
            properties:
              access_token:
                type: string
                description: Facebook or google access_token
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Use access_token to access private api
  /users:
    get:
      tags:
        - users
      summary: Get user list
      description: Get user list
      produces:
        - application/json
      parameters:
        - in: query
          name: skip
          type: integer
        - in: query
          name: limit
          type: integer
          maximum: 100
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    firstName:
                      type: string
                    lastName:
                      type: string
                    company:
                      type: string
                    avatar:
                      type: string
  '/users/{id}':
    get:
      tags:
        - users
      summary: Get user
      description: Get user
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                    description: Returned if request by current user
                  firstName:
                    type: string
                  lastName:
                    type: string
                  company:
                    type: string
                  avatar:
                    type: string
                  description:
                    type: string
  '/users/{id}/offers':
    get:
      tags:
        - users
      summary: Get user offer list
      description: Get user offer list
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          type: string
        - in: query
          name: skip
          type: integer
        - in: query
          name: limit
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: array
                      items:
                        $ref: '#/definitions/Lang'
                    properties:
                      type: object
                    price:
                      type: integer
                      format: float
                    state:
                      type: integer
                      format: number
                    images:
                      type: array
                      items:
                        type: string
  /categories:
    get:
      tags:
        - categories
      summary: Get category list
      description: Get category list
      produces:
        - application/json
      parameters:
        - in: query
          name: parent_id
          type: string
          description: Use for get child categories
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/Category'
  '/categories/{id}/filters':
    get:
      tags:
        - categories
      summary: Get category filter list
      description: Get category filter list
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Category id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  $ref: '#/definitions/Filter'
  /offers/search:
    post:
      tags:
        - offers
      summary: Search offers
      description: Search offers
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Use search params for get offer list
          schema:
            $ref: '#/definitions/SearchRequest'
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: array
                      items:
                        $ref: '#/definitions/Lang'
                    properties:
                      type: object
                    coords:
                      type: array
                      maxLength: 2
                      minLength: 2
                      items:
                        type: number
                        format: float
                    price:
                      type: integer
                      format: float
  /offers:
    post:
      summary: Create offer
      description: Create offer
      tags:
        - offers
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: array
                items:
                  $ref: '#/definitions/Lang'
              desc:
                type: array
                items:
                  $ref: '#/definitions/Lang'
              category:
                type: string
              properties:
                type: object
              coords:
                type: array
                maxLength: 2
                minLength: 2
                items:
                  type: number
                  format: float
              price:
                type: integer
                format: float
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  id:
                    type: string
  '/offers/{id}':
    get:
      tags:
        - offers
      summary: Get offer
      description: Get offer
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Offer id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: array
                    items:
                      $ref: '#/definitions/Lang'
                  desc:
                    type: array
                    items:
                      $ref: '#/definitions/Lang'
                  category:
                    type: string
                  userId:
                    type: string
                  properties:
                    type: object
                  images:
                    type: array
                    items:
                      type: string
                  state:
                    type: integer
                    format: number
                  coords:
                    type: array
                    maxLength: 2
                    minLength: 2
                    items:
                      type: number
                      format: float
                  price:
                    type: integer
                    format: float
    post:
      summary: Update offer
      description: Update offer
      tags:
        - offers
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Offer id
          required: true
          type: string
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: array
                items:
                  $ref: '#/definitions/Lang'
              desc:
                type: array
                items:
                  $ref: '#/definitions/Lang'
              properties:
                type: object
              coords:
                type: array
                maxLength: 2
                minLength: 2
                items:
                  type: number
                  format: float
              price:
                type: integer
                format: float
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: boolean
  '/offers/{id}/state/{state}':
    post:
      summary: Update offer
      description: Update offer
      tags:
        - offers
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Offer id
          required: true
          type: string
        - name: state
          in: path
          description: Offer state
          enum:
            - publish
            - moderate
            - archive
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
            properties:
              result:
                type: boolean
definitions:
  SearchRequest:
    type: object
    properties:
      query:
        type: string
        description: Search text
      query_language:
        type: string
        description: Language for search text
        enum:
          - english
          - russian
      category:
        type: string
      filters:
        type: object
        description: Object of filters. Used if category value is setted
      box:
        type: array
        maxItems: 2
        minItems: 2
        items:
          type: array
          items:
            type: number
            format: float
            maxItems: 2
            minItems: 2
      skip:
        type: integer
      limit:
        type: integer
        maximum: 100
  Lang:
    type: object
    properties:
      language:
        type: string
        enum:
          - english
          - russian
      text:
        type: string
  Offer:
    type: object
    properties:
      id:
        type: string
      name:
        type: array
        items:
          $ref: '#/definitions/Lang'
      desc:
        type: array
        items:
          $ref: '#/definitions/Lang'
      category:
        type: string
      userId:
        type: string
      properties:
        type: object
      coords:
        type: array
        maxLength: 2
        minLength: 2
        items:
          type: number
          format: float
  Filter:
    type: object
    properties:
      id:
        type: string
      lang_code:
        type: string
      type:
        type: string
        enum:
          - string
      name:
        type: array
        items:
          $ref: '#/definitions/Lang'
      values:
        type: array
        items:
          - type: string
          - type: integer
  Category:
    type: object
    properties:
      id:
        type: string
      name:
        type: array
        items:
          $ref: '#/definitions/Lang'
  Error:
    type: object
    properties:
      error_code:
        type: integer
      error_message:
        type: string
